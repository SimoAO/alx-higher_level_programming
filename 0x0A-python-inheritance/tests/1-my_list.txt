This doctest tests a script using the Mylist class.

Importing the function from the module
>>> MyList = __import__('1-my_list').MyList

Test print_sorted with empty list
>>> my_list = MyList()
>>> my_list.print_sorted()
[]


Test that object can be created
>>> my_list = MyList()
>>> my_list
[]

Test that MyList is only executed with zero argum
>>> my_list = MyList(5)
Traceback (most recent call last):
TypeError: 'int' object is not iterable


Teqting uf appending works correctly:
>>> my_list = MyList()
>>> my_list.append(1)
>>> my_list.append(3)
>>> my_list.append(2)
>>> my_list.append(4)
>>> print(my_list)
[1, 3, 2, 4]

Testing if the sorted list printed correctly:
>>> my_list.print_sorted()
[1, 2, 3, 4]

Testing if the list is unmodified after print sorted:
>>> print(my_list)
[1, 3, 2, 4]

Testing if negative numbers printed correctly:
>>> my_list = MyList()
>>> my_list.append(-1)
>>> my_list.append(-3)
>>> my_list.append(-2)
>>> my_list.append(-4)
>>> print(my_list)
[-1, -3, -2, -4]

Testing if the sorted list of negative numbers printed correctly:
>>> my_list.print_sorted()
[-4, -3, -2, -1]

Testing for empty list:
>>> my_list = MyList()
>>> print(my_list)
[]

Testing if removing an element works:
>>> my_list = MyList()
>>> my_list.append(1)
>>> my_list.remove(1)
>>> print(my_list)
[]
