The BaseGeometry module.

Importing the module
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Create class instqance
>>> bg = BaseGeometry()

Trying to create with a non integer argument:
>>> bg.integer_validator("age", "3")
Traceback (most recent call last):
TypeError: age must be an integer

>>> bg.integer_validator("age", [-3])
Traceback (most recent call last):
TypeError: age must be an integer

>>> bg.integer_validator("age", True)
Traceback (most recent call last):
TypeError: age must be an integer


>>> bg.integer_validator("age", {2, 3})
Traceback (most recent call last):
TypeError: age must be an integer

Trying to create with an integer argument:
>>> bg.integer_validator("age", -6)
Traceback (most recent call last):
ValueError: age must be greater than 0

>>> bg.integer_validator("name", 4)

>>> bg.integer_validator("name", 0)
Traceback (most recent call last):
ValueError: name must be greater than 0

Test if you can pass in a string and int without raised error
>>> bg.integer_validator("width", 89)

Check that call to area method raises an Exception

>>> bg.area()
Traceback (most recent call last):
Exception: area() is not implemented

Check that missing one argument doesn't execute
>>> bg.integer_validator("age")
Traceback (most recent call last):
TypeError: integer_validator() missing 1 required positional argument: 'value'

Check that missing two arguments doesn't execute
>>> bg.integer_validator()
Traceback (most recent call last):
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

Check that extra arguments doesn't execute:
>>> bg.integer_validator("check", 3, 5)
Traceback (most recent call last):
TypeError: integer_validator() takes 3 positional arguments but 4 were given
